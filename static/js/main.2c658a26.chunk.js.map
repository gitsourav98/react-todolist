{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","userName","action","done","todoItems","setTodos","newTodo","addNewTodo","Todo","todo","index","type","checked","onChange","updatedItems","map","item","toggleDone","onClick","removeTodo","className","newTodos","splice","style","backgroundColor","border","borderRadius","value","placeholder","e","preventDefault","target","margin","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAgGeA,MA9Ff,WACC,MAAgCC,mBAAS,UAAzC,mBAAOC,EAAP,KACA,GADA,KAC8BD,mBAAS,CACtC,CAAEE,OAAQ,WAAYC,MAAM,GAC5B,CAAED,OAAQ,gBAAiBC,MAAM,GACjC,CAAED,OAAQ,YAAaC,MAAM,MAH9B,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAA8BL,mBAAS,IAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAOMC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACZ,+BACC,6BAAKD,EAAKP,SACV,6BACC,uBACCS,KAAK,WACLC,QAASH,EAAKN,KACdU,SAAU,kBAoBd,SAAoBJ,GACnB,IAAMK,EAAeV,EAAUW,KAAI,SAACC,GAAD,OAClCA,EAAKd,SAAWO,EAAKP,OAArB,2BAAmCc,GAAnC,IAAyCb,MAAOa,EAAKb,OAASa,KAE/DX,EAASS,GAxBUG,CAAWR,QAG7B,6BACC,wBAAQS,QAAS,kBAAMC,EAAWT,IAAQU,UAAU,iBAApD,0BAKGD,EAAa,SAACT,GACnB,IAAMW,EAAQ,YAAOjB,GACrBiB,EAASC,OAAOZ,EAAO,GACvBL,EAASgB,IAeV,OACG,qBAAKD,UAAU,sCAAf,SAEF,sBAAKA,UAAU,uCACbG,MAAO,CAACC,gBAAgB,WAAYC,OAAO,YAAaC,aAAa,QADvE,UAEC,qBAAKN,UAAU,SAAf,SACC,qBAAIA,UAAU,sBAAd,UACEnB,EADF,qBAID,sBAAKmB,UAAU,SAAf,UACC,uBACCA,UAAU,eACVO,MAAOrB,EACFsB,YAAa,0BAClBf,SAtDgB,SAACgB,GAChBA,EAAEC,iBACNvB,EAAWsB,EAAEE,OAAOJ,QAqDZJ,MAAO,CAACE,OAAO,YAAaC,aAAa,UAE/C,wBAAQH,MAAO,CAACS,OAAO,QAASd,QA9BnC,WACCb,EAAS,GAAD,mBAAKD,GAAL,CAAgB,CAAEF,OAAQI,EAASH,MAAM,MACjDI,EAAW,KA4B6Ca,UAAU,kBAAhE,oBAID,qBAAKA,UAAU,SAAf,SACC,qBAAKA,UAAU,YAAf,SACC,wBAAOA,UAAU,QAAjB,UACC,uBAAOG,MAAO,CAACU,SAAS,QAAxB,SACC,+BACC,sCACA,0CACQ,6CAGV,uBAAOb,UAAU,aAAaG,MAAO,CAACU,SAAS,QAA/C,SACE7B,EAAUW,KAAI,SAACN,EAAMC,GAAP,OACd,cAACF,EAAD,CAAkBE,MAAOA,EAAOD,KAAMA,GAA3BC,qBCxEJwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2c658a26.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nfunction App() {\n\tconst [userName, setUserName] = useState('Sourav');\n\tconst [todoItems, setTodos] = useState([\n\t\t{ action: 'Buy book', done: true },\n\t\t{ action: 'Doctor at 5pm', done: false },\n\t\t{ action: 'Go to Gym', done: false },\n\t]);\n\tconst [newTodo, addNewTodo] = useState('');\n\n\tconst updateValue = (e) => {\n      e.preventDefault();\n\t\taddNewTodo(e.target.value);\n\t};\n\n\tconst Todo = ({ todo, index }) => (\n\t\t<tr>\n\t\t\t<td>{todo.action}</td>\n\t\t\t<td>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={todo.done}\n\t\t\t\t\tonChange={() => toggleDone(todo)}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={() => removeTodo(index)} className=\"btn btn-danger\">Delete</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n\n\tconst removeTodo = (index) => {\n\t\tconst newTodos = [...todoItems];\n\t\tnewTodos.splice(index, 1);\n\t\tsetTodos(newTodos);\n\t};\n\n\tfunction newTodoItem() {\n\t\tsetTodos([...todoItems, { action: newTodo, done: false }]);\n\t\taddNewTodo('');\n\t}\n\n\tfunction toggleDone(todo) {\n\t\tconst updatedItems = todoItems.map((item) =>\n\t\t\titem.action === todo.action ? { ...item, done: !item.done } : item\n\t\t);\n\t\tsetTodos(updatedItems);\n\t}\n\n\treturn (\n    <div className=\"position-relative card-body rounded\">\n   \n\t\t<div className=\"App p-3 mb-2 bg-secondary text-white\" \n    style={{backgroundColor:'##414ba3', border:'1px solid', borderRadius:'10px'}}>\n\t\t\t<div className=\"col-12\">\n\t\t\t\t<h2 className=\"bg- .text-light  p2\">\n\t\t\t\t\t{userName}'s To do list\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t\t<div className=\"col-12\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={newTodo}\n          placeholder =\"Write Something here...\"\n\t\t\t\t\tonChange={updateValue}\n          style={{border:'1px solid', borderRadius:'10px'}}\n\t\t\t\t/>\n\t\t\t\t<button style={{margin:'10px'}} onClick={newTodoItem} className=\"btn btn-success\">\n\t\t\t\t\tAdd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col-12\">\n\t\t\t\t<div className=\"todo-list\">\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<thead style={{fontSize:'20px'}}>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Task</th>\n\t\t\t\t\t\t\t\t<th>Complete</th>\n                <th>Delete</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody className=\"text-white\" style={{fontSize:'20px'}}>\n\t\t\t\t\t\t\t{todoItems.map((todo, index) => (\n\t\t\t\t\t\t\t\t<Todo key={index} index={index} todo={todo} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n    </div>\n    \n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}